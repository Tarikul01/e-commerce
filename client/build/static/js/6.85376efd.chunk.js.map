{"version":3,"sources":["store/actions/orderActions.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","../../src/index.tsx","screens/OrderDetailsScreen.js"],"names":["createOrder","order","dispatch","getState","a","type","ORDER_CREATE_REQUEST","config","headers","Authorization","userLogin","userInfo","token","axios","post","response","ORDER_CREATE_SUCCESS","payload","data","ORDER_CREATE_FAIL","message","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","deliverOrder","ORDER_DELIVER_REQUEST","_id","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","defaultProps","variant","undefined","active","disabled","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","className","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","PayPalButton","isSdkReady","window","this","actions","currency","options","amount","shippingPreference","purchase_units","currency_code","value","application_context","shipping_preference","onSuccess","createSubscription","onApprove","style","Button","ReactDOM","createOrderFn","onButtonReady","queryParams","Object","k","name","script","document","Error","Component","PropTypes","catchError","onError","clientId","merchantId","intent","commit","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug","func","OrderDetailsScreen","num","match","history","useState","sdkReady","setSdkReady","useDispatch","useSelector","state","orderDetails","loading","error","orderPay","loadingPay","successPay","success","orderDeliver","loadingDeliver","successDeliver","params","itemsPrice","orderItems","reduce","acc","item","price","qty","Math","round","toFixed","useEffect","push","addPayPalScript","src","async","onload","body","appendChild","ORDER_PAY_RESET","ORDER_DELIVER_RESET","isPaid","paypal","md","user","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","alt","fluid","rounded","to","product","shippingPrice","taxPrice","totalPrice","console","log","isAdmin"],"mappings":"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","file":"static/js/6.85376efd.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n} from './actionTypes';\r\n\r\nexport const createOrder = (order) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_CREATE_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.post(`/api/orders`, order, config);\r\n\r\n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrderDetails = (id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_DETAILS_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.get(`/api/orders/${id}`, config);\r\n\r\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const deliverOrder = (order) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_DELIVER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.put(\r\n        `/api/orders/${order._id}/deliver`,\r\n        {},\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ORDER_DELIVER_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const listMyOrders = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.get(`/api/orders/myorders`, config);\r\n\r\n      dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const listOrders = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_LIST_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n        },\r\n      };\r\n      const response = await axios.get(`/api/orders`, config);\r\n\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Col, Image, ListGroup, Row, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport axios from 'axios';\r\n\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  deliverOrder,\r\n  getOrderDetails,\r\n  payOrder,\r\n} from '../store/actions/orderActions';\r\nimport Message from '../components/Message';\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from '../store/actions/actionTypes';\r\n\r\nconst OrderDetailsScreen = ({ match, history }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { order, loading, error } = useSelector((state) => state.orderDetails);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { loading: loadingPay, success: successPay } = useSelector(\r\n    (state) => state.orderPay\r\n  );\r\n  const { loading: loadingDeliver, success: successDeliver } = useSelector(\r\n    (state) => state.orderDeliver\r\n  );\r\n\r\n  const orderId = match.params.id;\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order?.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&locale=en_US`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order?._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name : </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email : </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address : </strong>\r\n                {order?.shippingAddress.address},{order?.shippingAddress.city},\r\n                {order?.shippingAddress.postalCode},\r\n                {order?.shippingAddress.country}\r\n              </p>\r\n              {order?.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method : </strong>\r\n                {order?.paymentMethod}\r\n              </p>\r\n              {order?.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order?.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order?.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order?.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order?.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order?.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order?.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsScreen;\r\n"],"sourceRoot":""}